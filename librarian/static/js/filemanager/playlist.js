// Generated by CoffeeScript 1.10.0
(function(window, $) {
  'use strict';
  var Playlist, defaultOptions;
  defaultOptions = {
    toggleSidebarOnSelect: true
  };
  Playlist = function(container, options) {
    var current;
    this.options = $.extend({}, defaultOptions, options);
    this.items = container.find(this.options.itemSelector);
    this.items.on('click', 'a', this.onSelect.bind(this));
    current = container.find(this.options.currentItemSelector).first();
    if (current.length) {
      this.currentIndex = current.index();
    } else {
      this.currentIndex = 0;
    }
    this.setCurrent(this.currentIndex);
  };
  Playlist.prototype = {
    setCurrent: function(index) {
      var base, current, previous;
      previous = this.items.eq(this.currentIndex);
      this.currentIndex = index;
      current = this.items.eq(index);
      current.siblings().removeClass(this.options['currentItemClass']);
      current.addClass(this.options['currentItemClass']);
      if (typeof (base = this.options).setCurrent === "function") {
        base.setCurrent(current, previous);
      }
    },
    length: function() {
      return this.items.length;
    },
    moveTo: function(index) {
      if (index < 0 || index >= this.length()) {
        return;
      }
      this.setCurrent(index);
      ($(window)).trigger('playlist-updated');
    },
    next: function() {
      var index;
      index = (this.currentIndex + 1) % this.length();
      this.moveTo(index);
    },
    previous: function() {
      var index;
      index = (this.length() + this.currentIndex - 1) % this.length();
      this.moveTo(index);
    },
    onSelect: function(e) {
      var index, item, toggle, winW;
      e.preventDefault();
      e.stopPropagation();
      item = $(e.target).closest(this.options['itemSelector']);
      index = this.items.index(item);
      this.moveTo(index);
      toggle = this.options.toggleSidebarOnSelect;
      winW = ($(window)).outerWidth();
      if ((winW < 740 && toggle === 'narrow') || toggle === true) {
        ($(window)).trigger('views-sidebar-toggle');
      }
    }
  };
  window.Playlist = Playlist;
})(this, this.jQuery);
