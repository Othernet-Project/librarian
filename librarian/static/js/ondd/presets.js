// Generated by CoffeeScript 1.10.0
(function(window, $, templates) {
  var FIELDS, cacheSelectors, collapsible, fields, index, onTransponderSwitch, onddForm, options;
  FIELDS = ['frequency', 'symbolrate', 'polarization', 'delivery', 'modulation'];
  onddForm = $('#ondd-form');
  collapsible = onddForm.parents('.o-collapsible-section');
  if (!onddForm.length) {
    return;
  }
  fields = {};
  cacheSelectors = function() {
    var f, i, len, results;
    results = [];
    for (i = 0, len = FIELDS.length; i < len; i++) {
      f = FIELDS[i];
      results.push(fields[f] = $("#" + f));
    }
    return results;
  };
  options = {};
  index = function() {
    var transponders;
    transponders = onddForm.find('#transponders');
    return (transponders.find('option')).each(function() {
      var opt;
      opt = $(this);
      options[opt.val()] = opt;
    });
  };
  onTransponderSwitch = function() {
    var coverage, customSettingsFields, data, f, help, i, len, opt, transponders, val;
    customSettingsFields = onddForm.find('.settings-fields');
    transponders = onddForm.find('#transponders');
    val = transponders.val();
    opt = options[val];
    help = transponders.next('.o-field-help-message');
    help.text('');
    help.hide();
    if (!val) {
      customSettingsFields.hide();
    } else if (val === '-1') {
      customSettingsFields.show();
    } else {
      customSettingsFields.hide();
      data = opt.data();
      coverage = data.coverage;
      help.text(coverage);
      help.show();
      $('.o-field-error').removeClass("o-field-error");
      $(".o-field-error-message").remove();
      for (i = 0, len = FIELDS.length; i < len; i++) {
        f = FIELDS[i];
        fields[f].val(data[f]);
      }
    }
    collapsible.trigger('resize');
  };
  onddForm.on('change', '#transponders', onTransponderSwitch);
  ($(window)).on('transponder-updated', function() {
    index();
    cacheSelectors();
    return onTransponderSwitch();
  });
  index();
  cacheSelectors();
  onTransponderSwitch();
})(this, this.jQuery, this.templates);
