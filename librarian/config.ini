# This configuration file contains some defaults that should be modified to
# suit your environment.

[app]
# Port on which to listen
port = 80

# Address to bind to
bind = 0.0.0.0

components =
    librarian.librarian_sqlite
    librarian.librarian_setup
    librarian.librarian_auth
    librarian.librarian_library

redirect_delay = 5

# IP address range assigned by DHCP to clients
ap_client_ip_range =
    192.168.0.2
    192.168.0.255

# Root url of librarian
root_url = http://librarian.outernet

# Whether to enable debug mode and reloader
debug = yes

# Whether extra logging will be output to STDOUT (slows the server down)
log = no

# Whether server should automatically reload on code update
reloader = no

# Location of the lock file
lockfile = /var/run/librarian.lock

# List of bottle plugin names that will be skipped for routes that reference
# the list in the route configuration
skip_plugins =
    session
    user
    setup

[platform]

# Platform name, such as pillar, web, etc.
name =

# Location of the file containing the platform version number
version_file =

[logging]
# This section deals with logging section. Most of the settings are related to
# Python's logging module configuration. You may find documentation about
# relevant options here:
# https://docs.python.org/2/library/logging.config.html

# Log format
format = [%(asctime)s] %(levelname)-8s %(message)s

# Date and time formatting
date_format = %Y-%m-%d %H:%M:%S (%z)

# Maximum size of the log file
size = 10MB

# Number of backups to keep
backups = 4

# Output
output = /var/log/librarian.log

# Syslog path
syslog = /var/log/syslog

[setup]
# Store setup data in this file
file = /var/lib/outernet/librarian.json

[database]

# Path to database directory
path = /var/lib/outernet

[session]
# Name of the session cookie
cookie_name = session

# Session lifetime in seconds (default value is 1209600, two weeks)
lifetime = 1209600

[csrf]
# CSRF token cookie name
token_name = _csrf_token

# CSRF token cookie path
path = /

# CSRF token cookie max-age in seconds
expires = 600

[cache]
# Unique backend identifier, possible values are: "in-memory", "memcached"
backend =

# Default timeout value for all cached content for which there is no explicit
# timeout value specified
timeout =

# List of memcached server addresses, e.g.:
# servers =
#     127.0.0.1:11211
servers =

[mako]
# Path where to put generated modules from mako templates (improves performance drastically)
module_directory = /tmp/mako_modules

[storage]
# Minimum space needed on storage at all times. Values can be specified without
# a suffix, in which case it is treated as bytes, or with B, KB, MB, and GB
# suffixes (case-insensitive), for bytes, kilobytes, megabytes, and gigabytes,
# respectively.
minfree = 0.5GB

# Authorize automatic cleanup of content library if disk space is needed
auto_cleanup = no

[menu]

main =
    content
    files
    updates
    dashboard
    notifications
    logout

content =

[flat]

root = flatpages

[captive_portal]

domains =
    captive.apple.com:apple;200
    www.msftncsi.com:msft;200
    clients3.google.com:;204
    go.microsoft.com:;302

[plugins]

# Show diskspace stats and offer interfaces for cleanup
diskspace = yes

# Show license
license = yes

# Show Librarian logs
logs = yes

# Show link to TVHeadend
tvheadend = yes

# Control tuner using ONDD (disable TVHeadend when enabling this)
ondd = no

# Backup and rebuild content database
dbmanage = yes

# Show a list of available network interfaces
netinterfaces = yes

[ondd]

# Location of the ONDD socket
socket = /var/run/ondd.ctrl

[dbmanage]

# Location where database backups are stored, relative to filedir
backups = database_backups

[dashboard]

# Order in which plugins should be rendered
plugins =
    diskspace
    tvheadend
    dbmanage
    netinterfaces
    logs
    license

[emergency]

# Path to emrgency reset token file
file =

[library]
# Path for temporary content storage
spooldir = /var/spool/downloads/content

# Path for file downloads
filedir = /var/spool/downloads/files

# Path to a directory where zipballs that are being extracted are symlinked
unpackdir = /srv/zipballs/.unpack

# Path to content directory (where archive zipballs are stored)
contentdir = /srv/zipballs

[recovery]

dirtydir = /srv/zipballs/.unpack

[assets]

url = /static/
directory = static
debug = merge

js_bundles =
    ui : jquery, lodash, templates, URI, widgets/accordion, widgets/dropdown, widgets/menu, widgets/progress, widgets/forms
    content : tags, list
    dashboard : collapsible_dash_sections
    files: file_list
    setup: setdt
    reader: mediaelement, html, video, audio, image, content_dispatcher, tags, meta

css_bundles =
    main : main
    dashboard : dashboard
    wizard : wizard
    content: content

[templates]
view_path = views
