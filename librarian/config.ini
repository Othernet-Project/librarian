# This configuration file contains some defaults that should be modified to
# suit your environment.

[app]
# Port on which to listen
port = 8080

# Address to bind to
bind = 127.0.0.1

components =
    librarian_ui
    librarian_auth
    librarian_setup
    librarian_menu
    librarian_captive
    librarian_notifications

consume_tasks_delay = 2
redirect_delay = 5

# IP address range assigned by DHCP to clients
ap_client_ip_range =

# Default route to load when root path is accessed
default_route =

# Root url of librarian
root_url = http://localhost

# Whether to enable debug mode and reloader
debug = yes

# Whether extra logging will be output to STDOUT (slows the server down)
log = yes

# Whether server should automatically reload on code update
reloader = no

# List of bottle plugin names that will be skipped for routes that reference
# the list in the route configuration
skip_plugins =
    session
    user
    setup

[lock]
# Location of the lock file
file = tmp/librarian.lock

[platform]

# Platform name, such as pillar, web, etc.
name = Localhost

# Location of the file containing the platform version number
version_file =

[version]

# Python path to the module containing the __version__ attribute
source = librarian

[logging]
# This section deals with logging section. Most of the settings are related to
# Python's logging module configuration. You may find documentation about
# relevant options here:
# https://docs.python.org/2/library/logging.config.html

# Log format
format = [%(asctime)s] %(levelname)-8s %(message)s

# Date and time formatting
date_format = %Y-%m-%d %H:%M:%S (%z)

# Maximum size of the log file
size = 10MB

# Number of backups to keep
backups = 4

# Output
output = tmp/librarian.log

# Syslog path
syslog =

[setup]
# Store setup data in this file
file = tmp/librarian.json

[database]
backend = postgres
# path is still needed when performing cleanup in migrations
path = tmp
host = 127.0.0.1
port = 5432
user = postgres
password = postgres

[session]
# Name of the session cookie
cookie_name = session

# Session lifetime in seconds (default value is 1209600, two weeks)
lifetime = 1209600

[csrf]
# CSRF token cookie name
token_name = _csrf_token

# CSRF token cookie path
path = /

# CSRF token cookie max-age in seconds
expires = 600

[cache]
# Unique backend identifier, possible values are: "in-memory", "memcached"
backend =

# Default timeout value for all cached content for which there is no explicit
# timeout value specified
timeout =

# List of memcached server addresses, e.g.:
# servers =
#     127.0.0.1:11211
servers =

[mako]
# Path where to put generated modules from mako templates (improves performance drastically)
module_directory = tmp/mako_cache

[storage]
# Minimum space needed on storage at all times. Values can be specified without
# a suffix, in which case it is treated as bytes, or with B, KB, MB, and GB
# suffixes (case-insensitive), for bytes, kilobytes, megabytes, and gigabytes,
# respectively.
minfree = 0.5GB

# Authorize automatic cleanup of content library if disk space is needed
auto_cleanup = no

[assets]

url = /static/
directory = static
debug = merge

[i18n]

enabled = yes

domain = librarian

localedir = locales

project_package_name = librarian

extensions =
    py
    tpl

comment_string = Translators,

bug_report_email = translations@outernet.is

locales =
    de
    en
    pt_BR

[database]
# Names of all databases
names =
    facets
    files

[facets]
# Delay in seconds between checking for new content
refresh_rate = 60

# Delay before facets generation scan at startup
scan_delay = 10

# Delay before facets generation scan at startup
scan_step_delay = 1

# Delay before a scheduled facet generation is executed
ondemand_delay = 3

[fsal]
socket = /var/run/fsal.ctrl

[thumbs]
# name of folder where thumbnail images will be stored
dirname = .thumbs
# quality applies to a limited number of formats only (2-31)
quality = 15
# determines the file format and the extension of thumbnail
extension = jpg
# thumbnail image size
size = 240x240
# defer creation of thumbnails to background tasks
async = no

[changelog]
# number of days to take into account when showing updates
span = 4

ignored_paths =
    .appdata

[emergency]

# Path to emrgency reset token file
file =

[assets]
js_bundles =
    filemanager: main, generic, image, playlist, playlist_info, vendor/mediaelement, mejs_ext, media_player, audio, video, html

css_bundles =
    filemanager: filemanager
    overrides: overrides
    restyle: restyle
    wizard: auth_step
    auth_note: auth_step
