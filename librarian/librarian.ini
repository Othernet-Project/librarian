# This configuration file contains some defaults that should be modified to
# suit your environment.

[librarian]
# WSGI server to use (use bjoern on *nix systems and gevent or cherrypy on
# Windows for best results)
server = gevent

# Port on which to listen
port = 80

# Address to bind to
bind = 0.0.0.0

# IP address range assigned by DHCP to clients
ap_client_ip_range =
    192.168.0.2
    192.168.0.255

# Root url of librarian
root_url = http://librarian.outernet

# Whether to enable debug mode and reloader
debug = yes

# Whether extra logging will be output to STDOUT (slows the server down)
log = no

# Whether server should automatically reload on code update
reloader = no

# Location of the lock file
lockfile = /var/run/librarian.lock

# Chosen backend
backend = embedded.archive.EmbeddedArchive

# Enabled command line arguments
commands =
    su
    debug_conf
    dump_tables
    refill
    reload
    repl
    assets
    version

# Enabled routes
routes =
    librarian.routes.auth.routes
    librarian.routes.content.routes
    librarian.routes.files.routes
    librarian.routes.tags.routes
    librarian.routes.downloads.routes
    librarian.routes.dashboard.routes
    librarian.routes.setup.routes
    librarian.routes.apps.routes
    librarian.routes.notifications.routes
    librarian.routes.emergency_reset.routes
    librarian.routes.system.routes

# List of bottle plugin names that will be skipped for routes that reference
# the list in the route configuration
skip_plugins =
    session
    user
    setup

[hooks]

commands =
    librarian.utils.commands.register_commands

pre_start =
    librarian.utils.logger.configure_logger
    librarian.utils.core_helpers.create_directories
    librarian.utils.databases.apply_migrations
    librarian.utils.security.auto_setup
    librarian.utils.static.setup_static
    librarian.utils.setup.load_setup

start =
    librarian.utils.captive.install_captive_portal_plugin
    librarian.utils.timer.total_timer_plugin
    librarian.utils.databases.database_plugin
    librarian.utils.security.session_plugin
    librarian.utils.security.auth_plugin
    librarian.utils.lock.lock_plugin
    librarian.utils.setup.setup_wizard_plugin
    librarian.utils.core_helpers.content_domain_plugin
    librarian.utils.timer.handler_timer_plugin
    librarian.utils.cache.cache_plugin
    librarian.utils.notifications.notification_plugin
    librarian.utils.flat.flat_plugin
    librarian.plugins.install_plugins
    librarian.menu.install_menuitems
    librarian.routes.install_routes
    librarian.utils.template.configure_template

post_start =

background =

shutdown =
    librarian.utils.databases.close_databases

[platform]

# Platform name, such as pillar, web, etc.
name =

# Location of the file containing the platform version number
version_file =

[logging]
# This section deals with logging section. Most of the settings are related to
# Python's logging module configuration. You may find documentation about
# relevant options here:
# https://docs.python.org/2/library/logging.config.html

# Log format
format = [%(asctime)s] %(levelname)-8s %(message)s

# Date and time formatting
date_format = %Y-%m-%d %H:%M:%S (%z)

# Maximum size of the log file
size = 10MB

# Number of backups to keep
backups = 4

# Output
output = /var/log/librarian.log

# Syslog path
syslog = /var/log/syslog

[setup]
# Store setup data in this file
file = /var/lib/outernet/librarian.json

[database]
# Names of all databases
names =
    main
    sessions

# Path to database directory
path = /var/lib/outernet

[content]
# Path for temporary content storage
spooldir = /var/spool/downloads/content

# Path for file downloads
filedir = /var/spool/downloads/files

# Path for the apps directory
appdir = /var/spool/downloads/files/apps

# Path to a directory where zipballs that are being extracted are symlinked
unpackdir = /srv/zipballs/.unpack

# Path to content directory (where archive zipballs are stored)
contentdir = /srv/zipballs

# Path to cover images
covers = /srv/zipballs/.covers

# Extension of the signed content
extension = sig

# Extension of decrypted content
output_ext = zip

# Maximum days to keep undecrypted files
#
# If the key is updated upstream, we need to allow some time for the receiver
# to receive the updated public key. Meanwhile, we leave any undecrypted
# content on storage. This setting should be adjusted according to the volume
# of content that comes down the dish, and software update dynamics.
keep = 14

# Name of the file that contains content metadata
metadata = info.json

[session]
# Name of the session cookie
cookie_name = session

# Session lifetime in seconds (default value is 1209600, two weeks)
lifetime = 1209600

[csrf]
# CSRF token cookie name
token_name = _csrf_token

# CSRF token cookie path
path = /

# CSRF token cookie max-age in seconds
expires = 600

[cache]
# Unique backend identifier, possible values are: "in-memory", "memcached"
backend =

# Default timeout value for all cached content for which there is no explicit
# timeout value specified
timeout =

# List of memcached server addresses, e.g.:
# servers =
#     127.0.0.1:11211
servers =

[mako]
# Path where to put generated modules from mako templates (improves performance drastically)
module_directory = /tmp/mako_modules

[storage]
# Minimum space needed on storage at all times. Values can be specified without
# a suffix, in which case it is treated as bytes, or with B, KB, MB, and GB
# suffixes (case-insensitive), for bytes, kilobytes, megabytes, and gigabytes,
# respectively.
minfree = 0.5GB

# Authorize automatic cleanup of content library if disk space is needed
auto_cleanup = no

[menu]

main =
    content
    sites
    files
    apps
    updates
    dashboard
    notifications
    logout

content =

[flat]

root = flatpages

[captive_portal]

domains = 
    www.apple.com:apple;200
    captive.apple.com:apple;200
    www.aiport.us:apple;200
    appleiphonecell.com:apple;200
    www.itools.info:apple;200
    www.ibook.info:apple;200
    www.thinkdifferent.us:apple;200
    www.msftncsi.com:msft;200
    clients3.google.com:;204
    go.microsoft.com:;302

[plugins]

# Show diskspace stats and offer interfaces for cleanup
diskspace = yes

# Show license
license = yes

# Show Librarian logs
logs = yes

# Show link to TVHeadend
tvheadend = yes

# Control tuner using ONDD (disable TVHeadend when enabling this)
ondd = no

# Backup and rebuild content database
dbmanage = yes

# Show a list of available network interfaces
netinterfaces = yes

[ondd]

# Location of the ONDD socket
socket = /var/run/ondd.ctrl

[dbmanage]

# Location where database backups are stored, relative to filedir
backups = database_backups

[dashboard]

# Order in which plugins should be rendered
plugins =
    diskspace
    tvheadend
    dbmanage
    netinterfaces
    logs
    license

[emergency]

# Path to emrgency reset token file
file =

[assets]

url = /static/
directory = static
debug = merge

js_bundles =
    ui : jquery, lodash, templates, URI, widgets/accordion, widgets/dropdown, widgets/menu, widgets/progress, widgets/forms
    content : tags, list
    dashboard : collapsible_dash_sections
    files: file_list
    setup: setdt
    reader: patcher

css_bundles =
    main : main
    dashboard : dashboard
    wizard : wizard
    content: content
